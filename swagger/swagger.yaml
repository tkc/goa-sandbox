basePath: /
consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  AccountListPayload:
    example:
      ids:
      - Ut rerum quis velit debitis.
      offset: 1.858008479944432e+18
    properties:
      ids:
        example:
        - Ut rerum quis velit debitis.
        items:
          example: Ut rerum quis velit debitis.
          type: string
        type: array
      offset:
        example: 1.858008479944432e+18
        format: int64
        type: integer
    required:
    - ids
    - offset
    title: AccountListPayload
    type: object
  AccountPayload:
    example:
      email: jesus@gutmann.net
      password: poz0nciae7
    properties:
      email:
        example: jesus@gutmann.net
        format: email
        type: string
      password:
        description: password
        example: poz0nciae7
        maxLength: 20
        minLength: 8
        pattern: ^[a-zA-Z0-9!-/:-@¥{}±§|[-{-~]+$
        type: string
    required:
    - email
    - password
    title: AccountPayload
    type: object
  GoaExampleAccount:
    description: GoaExampleAccount media type (default view)
    example:
      name: Laborum voluptas a officiis.
      token: Tempora eum molestiae temporibus et.
      userId: 1.0526791940196297e+18
    properties:
      name:
        description: Name of user
        example: Laborum voluptas a officiis.
        type: string
      token:
        description: Unique User Token
        example: Tempora eum molestiae temporibus et.
        type: string
      userId:
        description: Unique User ID
        example: 1.0526791940196297e+18
        format: int64
        type: integer
    required:
    - userId
    title: 'Mediatype identifier: application/vnd.goa.example.account+json; view=default'
    type: object
  GoaExampleAccountCollection:
    description: GoaExampleAccountCollection is the media type for an array of GoaExampleAccount
      (default view)
    example:
    - name: Laborum voluptas a officiis.
      token: Tempora eum molestiae temporibus et.
      userId: 1.0526791940196297e+18
    - name: Laborum voluptas a officiis.
      token: Tempora eum molestiae temporibus et.
      userId: 1.0526791940196297e+18
    - name: Laborum voluptas a officiis.
      token: Tempora eum molestiae temporibus et.
      userId: 1.0526791940196297e+18
    items:
      $ref: '#/definitions/GoaExampleAccount'
    title: 'Mediatype identifier: application/vnd.goa.example.account+json; type=collection;
      view=default'
    type: array
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609066e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609066e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
externalDocs:
  description: wiki
  url: https://github.com/tkc/goa-sandbox/wiki
host: localhost:8081
info:
  contact:
    email: iijima@onga.jp
    name: tkc
    url: https://github.com/tkc/goa-sandbox/issues
  description: sample
  license:
    name: MIT
    url: https://github.com/tkc/goa-sandbox/blob/master/LICENSE
  title: goa-sandbox
  version: ""
paths:
  /current_user:
    get:
      operationId: account#currentUser
      produces:
      - application/vnd.goa.error
      - application/vnd.goa.example.account+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GoaExampleAccount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: currentUser account
      tags:
      - account
  /jwt:
    get:
      description: |-
        This action is secured with the jwt scheme

        Required security scopes:
          * `api:access`
      operationId: jwt#secure
      parameters:
      - description: Force auth failure via JWT validation middleware
        in: query
        name: fail
        required: false
        type: boolean
      produces:
      - application/vnd.goa.error
      - application/vnd.goa.example.account+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GoaExampleAccount'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: secure jwt
      tags:
      - jwt
  /jwt/sign_in:
    post:
      description: Creates a valid JWT
      operationId: jwt#signIn
      produces:
      - application/vnd.goa.error
      - application/vnd.goa.example.account+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GoaExampleAccount'
        "204":
          description: No Content
          headers:
            Authorization:
              description: Generated JWT
              type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      security:
      - SigninBasicAuth: []
      summary: signIn jwt
      tags:
      - jwt
  /jwt/unsecure:
    get:
      description: This action does not require auth
      operationId: jwt#unsecure
      produces:
      - application/vnd.goa.error
      - application/vnd.goa.example.account+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GoaExampleAccount'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: unsecure jwt
      tags:
      - jwt
  /list:
    get:
      operationId: account#list
      parameters:
      - collectionFormat: multi
        in: query
        items:
          type: integer
        name: ids
        required: false
        type: array
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AccountListPayload'
      produces:
      - application/vnd.goa.error
      - application/vnd.goa.example.account+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GoaExampleAccountCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: list account
      tags:
      - account
  /login:
    post:
      operationId: account#login
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AccountPayload'
      produces:
      - application/vnd.goa.error
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: login account
      tags:
      - account
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
schemes:
- http
securityDefinitions:
  SigninBasicAuth:
    type: basic
  jwt:
    description: |2-


      **Security Scopes**:
        * `api:access`: API access
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
