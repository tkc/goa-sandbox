// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "goa sample": Application Media Types
//
// Command:
// $ goagen
// --design=github.com/tkc/goa-sandbox/design
// --out=$(GOPATH)/src/github.com/tkc/goa-sandbox
// --version=v1.3.1

package app

import (
	"github.com/goadesign/goa"
)

// GoaExampleAccountCurrentuser media type (default view)
//
// Identifier: application/vnd.goa.example.account.currentuser+json; view=default
type GoaExampleAccountCurrentuser struct {
	// Name of user
	Name string `form:"name" json:"name" yaml:"name" xml:"name"`
	// Unique User ID
	UserID int `form:"userId" json:"userId" yaml:"userId" xml:"userId"`
}

// Validate validates the GoaExampleAccountCurrentuser media type instance.
func (mt *GoaExampleAccountCurrentuser) Validate() (err error) {

	if mt.Name == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "name"))
	}
	return
}

// GoaExampleAccountLogin media type (default view)
//
// Identifier: application/vnd.goa.example.account.login+json; view=default
type GoaExampleAccountLogin struct {
	// Name of user
	Name string `form:"name" json:"name" yaml:"name" xml:"name"`
	// Unique User Token
	Token string `form:"token" json:"token" yaml:"token" xml:"token"`
	// Unique User ID
	UserID int `form:"userId" json:"userId" yaml:"userId" xml:"userId"`
}

// Validate validates the GoaExampleAccountLogin media type instance.
func (mt *GoaExampleAccountLogin) Validate() (err error) {

	if mt.Token == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "token"))
	}
	if mt.Name == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "name"))
	}
	return
}

// GoaExampleAccountLogout media type (default view)
//
// Identifier: application/vnd.goa.example.account.logout+json; view=default
type GoaExampleAccountLogout struct {
	// action status
	Status *bool `form:"status,omitempty" json:"status,omitempty" yaml:"status,omitempty" xml:"status,omitempty"`
}

// GoaExampleAccountOk media type (default view)
//
// Identifier: application/vnd.goa.example.account.ok+json; view=default
type GoaExampleAccountOK struct {
	// action status
	Status *bool `form:"status,omitempty" json:"status,omitempty" yaml:"status,omitempty" xml:"status,omitempty"`
}

// GoaExampleAccountRegister media type (default view)
//
// Identifier: application/vnd.goa.example.account.register+json; view=default
type GoaExampleAccountRegister struct {
	// Name of user
	Name string `form:"name" json:"name" yaml:"name" xml:"name"`
	// Unique User Token
	Token string `form:"token" json:"token" yaml:"token" xml:"token"`
	// Unique User ID
	UserID int `form:"userId" json:"userId" yaml:"userId" xml:"userId"`
}

// Validate validates the GoaExampleAccountRegister media type instance.
func (mt *GoaExampleAccountRegister) Validate() (err error) {

	if mt.Token == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "token"))
	}
	if mt.Name == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "name"))
	}
	return
}
